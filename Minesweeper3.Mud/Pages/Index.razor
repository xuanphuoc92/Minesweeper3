@page "/"
@inject Game Game

<PageTitle>Minesweeper</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Minesweeper</MudText>
<MudText Class="mb-8">Welcome to your minesweeper game app, powered by MudBlazor!</MudText>

@* Gamebar *@
<div class="d-flex justify-space-around flex-grow-1 gap-4 align-center">
    <div>
        <MudText>Mines</MudText>
        <MudText Typo="Typo.h6">@Game.MineCount</MudText>
    </div>
    <MudButton Variant="Variant.Filled" OnClick="NewGame">
        <MudIcon Icon="@Icons.Material.Filled.EmojiEmotions" Size="Size.Large" Color="@GetGameColor()" />
    </MudButton>
    <div>
        <MudText>Time</MudText>
        <MudText Typo="Typo.h6">000</MudText>
    </div>
</div>

@* Game cells *@
@for (int y = 0; y < Game.Height; y++)
{
    <div class="d-flex justify-md-center" @oncontextmenu:preventDefault="true">
        @for (int x = 0; x < Game.Width; x++)
        {
            Cell cell = Game.Cells[(x, y)];
            <MudButton 
                Class="d-flex justify-center align-center border-2 border-solid mud-border-lines-default rounded-0"
                Style=@($"height:64px;width:64px;background-color:{GetBackgroundColor(cell)}")
                @onclick="() => Pick(cell)"
                @oncontextmenu="() => Flag(cell)">
                @if (cell.Content == CellContent.Number)
                {
                    <MudText Typo="Typo.h6">@cell.Number</MudText>
                }
                else if (cell.Content == CellContent.Flag)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Flag" Size="@Size.Large" />
                }
                else if (cell.Content == CellContent.Mine)
                {
                    <MudIcon Icon="@Icons.Material.Filled.BrightnessHigh" Size="@Size.Large" />
                }
            </MudButton>
        }
    </div>
}

@code
{
    private void NewGame()
    {
        Game = Game.New(10, 10).RandomizeMines(10).Start();
    }

    private void Pick(Cell cell)
    {
        Game.Pick(cell.X, cell.Y);
    }

    private void Flag(Cell cell)
    {
        Game.Flag(cell.X, cell.Y);
    }

    private string GetBackgroundColor(Cell cell)
    {
        return cell.Background switch
        {
            CellBackground.PickedMine => Colors.Red.Lighten1,
            CellBackground.WrongFlag => Colors.Red.Lighten3,
            CellBackground.Picked => Colors.Grey.Darken2,
            _ => "none"
        };
    }

    private Color GetGameColor()
    {
        return Game.State switch
        {
            GameState.Win => Color.Success,
            GameState.Lose => Color.Error,
            _ => Color.Warning
        };
    }
}